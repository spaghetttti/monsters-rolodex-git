{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","class","onChange","App","e","setState","searchField","target","value","console","log","state","fetch","then","Response","json","users","this","filteredMonsters","filter","toLowerCase","includes","logo","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAAe,MAA0B,iC,2BCG5BA,EAAO,SAACC,GAAD,OAChB,qBAAKC,UAAY,iBAAjB,SACI,sBAAKA,UAAU,QAAf,UACA,qBAAKC,IAAG,sCAAiCF,EAAMG,QAAQC,GAA/C,0BAA2EC,IAAI,UACvF,mCAAK,kCAAKL,EAAMG,QAAQG,KAAnB,UACL,kCAAMN,EAAMG,QAAQI,MAApB,aCJKC,EAAW,SAACR,GAAD,OACpB,qBAAKC,UAAY,YAAjB,SAEKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAC3B,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,UCJhBO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOZ,UAAY,SACnBa,KAAK,SACLF,YAAcA,EACdG,MAAQ,aACRC,SAAUH,MCyDCI,E,kDAxDb,aAAe,IAAD,8BACZ,gBAcFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,YAAcF,EAAEG,OAAOC,QAAQ,kBAAMC,QAAQC,IAAI,EAAKC,WAbtE,EAAKA,MAAQ,CACXhB,SAAW,GACXW,YAAc,IALJ,E,qDASd,WAAqB,IAAD,OAClBM,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACV,SAAWqB,S,oBAO3C,WAAU,IAAD,EAE2BC,KAAKN,MAA/BhB,EAFD,EAECA,SAAUW,EAFX,EAEWA,YACZY,EAAmBvB,EAASwB,QAAO,SAAA9B,GAAO,OAC9CA,EAAQG,KAAK4B,cAAcC,SAASf,EAAYc,kBAGlD,OACE,sBAAKjC,UAAU,MAAf,UAEE,cAAC,EAAD,CACEW,YAAc,mBACdC,aAAiBkB,KAAKlB,eAExB,oBAAIZ,UAAY,WAAhB,8BAGA,cAAC,EAAD,CAAUQ,SAAYuB,IAGtB,yBAAQ/B,UAAU,aAAlB,UACE,qBAAKC,IAAKkC,EAAMnC,UAAU,WAAWI,IAAI,SACzC,4BAEI0B,KAAKN,MAAMhB,SAASC,KAAI,SAAAD,GAAQ,OACjC,kCAAI,kCAAKA,EAASH,KAAd,OAAJ,sB,GA9CK+B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1678d97e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import  React from \"react\";\r\nimport './card.styles.css';\r\n// eslint-disable-next-line\r\nexport const Card = (props) => ( \r\n    <div className = 'card-container'>\r\n        <div className=\"trans\">\r\n        <img src={`https://robohash.org/KKY.png${props.monster.id}?set=set1&size=180x180`} alt=\"robot\"/>\r\n        <h5> <i> {props.monster.name} </i></h5>\r\n        <p> { props.monster.email } </p> \r\n        </div>\r\n    </div>\r\n)","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport { Card } from '../card/card.component.jsx'\r\n\r\nexport const CardList = (props) => (\r\n    <div className = \"card-list\" >\r\n    \r\n        {props.monsters.map(monster => ( \r\n        <Card key = {monster.id} monster = {monster} />\r\n        \r\n        ))}\r\n        \r\n    </div>\r\n    \r\n\r\n);","import React, { Component } from 'react';\r\n\r\nimport './search-box.styles.css';\r\n        \r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input className = \"search\"\r\n    type='search' \r\n    placeholder={ placeholder } \r\n    class = 'search-bar'\r\n    onChange={handleChange}> \r\n\r\n  </input>\r\n) ","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react'\nimport { CardList } from './components/card-list/card-list.component.jsx'\nimport { Card } from \"./components/card/card.component.jsx\";\nimport { SearchBox } from \"./components/search-box/search-box.component\" ;\n                      \n\nclass App extends React.Component  {\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters : [],\n      searchField : ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(Response => Response.json())\n    .then(users => this.setState({monsters : users}))\n  }\n  \n  handleChange = (e) => {\n    this.setState({ searchField : e.target.value}, () => console.log(this.state))  \n  } \n\n  render() {\n\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    ) \n\n    return ( \n      <div className=\"App\">\n          \n        <SearchBox \n          placeholder = ' search monsters'\n          handleChange = { this.handleChange}\n        />\n        <h1 className = \"headline\">\n            Monsters Rolodex\n        </h1>\n        <CardList monsters = {filteredMonsters} > \n              \n        </CardList>\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            {\n              this.state.monsters.map(monsters => ( \n             <p> <i> {monsters.name} </i> </p>))\n            }\n          </p>\n       </header>\n          \n        </div>\n     )\n\n\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}